plugins {
    id 'java'
    // 确保 shadow 插件的版本是新的，并且应用了 application 插件
    id 'com.github.johnrengelman.shadow' version '7.1.2'
    id 'application'
}

group 'me.cortex.TreeCracker'
version '1.0-SNAPSHOT'

// 指定 Java 编译版本
java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

// application 插件需要这个块来确定主类
application {
    mainClass = 'me.cortex.TreeCracker.program.OpenCLProgram'
}

repositories {
    mavenCentral()
    maven {
        url "https://jitpack.io"
    }
    maven{
        url "https://maven.latticg.com"
    }
}

dependencies {
    implementation group: 'commons-io', name: 'commons-io', version: '2.8.0'
    implementation "com.github.hube12:SEED:b80304e54"
    implementation "com.seedfinding:latticg:1.06@jar"

    // 关键的 OpenCL 依赖
    implementation group: 'org.jocl', name: 'jocl', version: '2.0.4'
}

// shadowJar 任务的配置
shadowJar {
    // 确保 Main-Class 属性被正确设置
    manifest {
        attributes 'Main-Class': application.mainClass.get()
    }
    // 这是为了防止某些库的服务文件冲突，好习惯
    mergeServiceFiles()
    
    // 设置最终输出的文件名
    archiveBaseName.set('TreeCracker-OpenCL')
    archiveClassifier.set('')
    archiveVersion.set('1.0')
}

// 确保 'build' 任务依赖 'shadowJar'
build.dependsOn shadowJar
